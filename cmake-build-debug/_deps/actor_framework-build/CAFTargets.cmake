# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.18)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget CAF::internal CAF::test CAF::core CAF::io)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target CAF::internal
add_library(CAF::internal INTERFACE IMPORTED)

set_target_properties(CAF::internal PROPERTIES
  INTERFACE_COMPILE_OPTIONS "-Wall;-Wextra;-pedantic;-ftemplate-depth=512;-ftemplate-backtrace-limit=0;-Wno-missing-field-initializers"
)

# Create imported target CAF::test
add_library(CAF::test INTERFACE IMPORTED)

set_target_properties(CAF::test PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/tobi/VSP/vslab-caf/cmake-build-debug/_deps/actor_framework-src/libcaf_test"
)

# Create imported target CAF::core
add_library(CAF::core SHARED IMPORTED)

set_target_properties(CAF::core PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/tobi/VSP/vslab-caf/cmake-build-debug/_deps/actor_framework-src/libcaf_core;/home/tobi/VSP/vslab-caf/cmake-build-debug/_deps/actor_framework-build/libcaf_core"
  INTERFACE_LINK_LIBRARIES "Threads::Threads"
)

# Create imported target CAF::io
add_library(CAF::io SHARED IMPORTED)

set_target_properties(CAF::io PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/tobi/VSP/vslab-caf/cmake-build-debug/_deps/actor_framework-src/libcaf_io;/home/tobi/VSP/vslab-caf/cmake-build-debug/_deps/actor_framework-build/libcaf_io"
  INTERFACE_LINK_LIBRARIES "CAF::core;\$<\$<CXX_COMPILER_ID:MSVC>:ws2_32>"
)

# Import target "CAF::core" for configuration "Debug"
set_property(TARGET CAF::core APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(CAF::core PROPERTIES
  IMPORTED_LOCATION_DEBUG "/home/tobi/VSP/vslab-caf/cmake-build-debug/_deps/actor_framework-build/libcaf_core/libcaf_core.so.0.18.0"
  IMPORTED_SONAME_DEBUG "libcaf_core.so.0.18.0"
  )

# Import target "CAF::io" for configuration "Debug"
set_property(TARGET CAF::io APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(CAF::io PROPERTIES
  IMPORTED_LOCATION_DEBUG "/home/tobi/VSP/vslab-caf/cmake-build-debug/_deps/actor_framework-build/libcaf_io/libcaf_io.so.0.18.0"
  IMPORTED_SONAME_DEBUG "libcaf_io.so.0.18.0"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
